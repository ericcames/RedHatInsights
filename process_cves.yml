---
  - name: Get the list of CVEs related to the server
    hosts: localhost
    connection: local
    gather_facts: no
    
    tasks:

    - name: Get my list of CVEs
      register: my_cve_list
      ignore_errors: true
      ansible.builtin.uri:
        url: "https://console.redhat.com/api/vulnerability/v1/systems/{{ my_insights_inventory_id }}/cves"
        method: GET
        user: "{{ insights_username }}"
        password: "{{ insights_password }}"
        validate_certs: no
        force_basic_auth: yes
        status_code: 200
        return_content: yes 
        headers:
          Content-Type: "application/json"
    
    - name: Create a change task for each cve with a playbook
      register: task_numbers_are_here
      loop: "{{ my_cve_list['json']['data'] }}"
      when: item.attributes.remediation == 2
      servicenow.itsm.change_request_task:
        configuration_item: "{{ my_server }}"
        change_request_number: "{{ ticket_number }}"
        type: implementation
        state: open
        assigned_to: "hercules"
        assignment_group: "Ansible West Tigers"
        short_description: "vulnerabilities:{{ item.attributes.synopsis }} on Red Hat Insights Inventory ID: {{ my_insights_inventory_id }}"
        description: "{{ item.attributes.description }}"
        on_hold: true
        hold_reason: "Waiting for Ansible Automation Platform to run the remediation playbook."
        other:
          approval: approved
          user_input: "{{ item.attributes.synopsis }}"

    - name: Create a Change Task Tickets dictionary
      loop: "{{ task_numbers_are_here['results'] }}"
      when: item.changed != false
      ansible.builtin.set_fact:
        #chg_tkt_dict: "{{chg_tkt_dict|default({}) | combine ( {item.record.number : item.record.short_description}) }}"
        chg_tkt_list: "{{chg_tkt_list|default([]) + [{ 'number' : item.record.number, 
                                                       'short_description' : item.record.short_description, 
                                                       'task_sys_id' : item.record.sys_id,
                                                       'change_request_sys_id' : item.record.change_request,
                                                       'cmdb_ci' : item.record.cmdb_ci,
                                                       'insights_id' : my_insights_inventory_id,
                                                       'cve_id' : item.record.user_input }] }}"

    - name: print out Change Task Tickets dictionary
      ansible.builtin.debug:
        msg: "{{ chg_tkt_list }}"

    - name: Create problem for each cve without a playbook
      register: problem_numbers_are_here
      loop: "{{ my_cve_list['json']['data'] }}"
      when: item.attributes.remediation != 2
      servicenow.itsm.problem:
        state: new
        short_description: "Red Hat Insights vulnerabilities:{{ item.attributes.synopsis }} there is no available Ansible Playbook :-0"
        description: "{{ item.attributes.description }}"
        impact: medium
        urgency: low
        other:
          user_input: "{{ my_server }}"

    - name: Create a Problem tickets dictionary
      loop: "{{ problem_numbers_are_here['results'] }}"
      when: item.changed != false
      ansible.builtin.set_fact:
        #pbm_tkt_list: "{{ pbm_tkt_list | default({}) | combine ({ item.key : item.value}) }}"
        # pbm_tkt_dict: "{{pbm_tkt_dict|default({}) | combine ( {item.record.number : 'short_description' : item.record.short_description, 
        #                                                                             'sys_id' item.record.sys_id}) }}"
        pbm_tkt_list: "{{pbm_tkt_list|default([]) + [{ 'number' : item.record.number, 
                                                       'short_description' : item.record.short_description, 
                                                       'sys_id' : item.record.sys_id, 
                                                       'cmdb_ci' : item.record.user_input }] }}"
        
    - name: print out Problem tickets dictionary
      ansible.builtin.debug:
        msg: "{{ pbm_tkt_list }}"

    - name: print
      ansible.builtin.debug:
        msg: "{{pbm_tkt_list | type_debug}}"     
      